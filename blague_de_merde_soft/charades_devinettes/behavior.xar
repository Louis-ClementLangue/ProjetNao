<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram>
            <Box name="Play Sound (1)" id="23" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="1220" y="210">
              <bitmap>media/images/box/interaction/play_music.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../elevator-music.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
              <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
              <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
              <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
              <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                        <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                        <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                        <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                      </Box>
                      <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                        <bitmap>media/images/box/folder.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                        <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Audio player" type="Lock" timeout="0" />
            </Box>
            <Box name="Color Edit" id="9" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="195" y="31">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([255, 0, 127])]]>
                </content>
              </script>
              <pluginContent>
                <color>#ff007f</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Eye LEDs" id="11" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="400" y="83">
              <bitmap>media/images/box/interaction/LED.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
              <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                <Choice value="Both" />
                <Choice value="Left" />
                <Choice value="Right" />
              </Parameter>
              <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                      </Box>
                      <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <color>#0051ff</color>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                        <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                      </Box>
                      <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                      <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Say" id="1" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="267" y="240">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                      </Box>
                      <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                        <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Bonjour, je suis NAO le robot, ça te dit qu\'on fasse des devinettes ensemble ? ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                          </content>
                        </script>
                        <pluginContent>
                          <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                            <![CDATA[]]>
                          </arabic>
                          <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                            <![CDATA[Ahoj]]>
                          </czech>
                          <danish uiName="‎Dansk (Danish)" languageName="Danish">
                            <![CDATA[Hej]]>
                          </danish>
                          <german uiName="‎Deutsch (German)" languageName="German">
                            <![CDATA[Hallo]]>
                          </german>
                          <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                            <![CDATA[]]>
                          </greek>
                          <english uiName="‎American English (American English)" languageName="English">
                            <![CDATA[Hello]]>
                          </english>
                          <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                            <![CDATA[Hola]]>
                          </spanish>
                          <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                            <![CDATA[Hei]]>
                          </finnish>
                          <french uiName="‎Français (French)" languageName="French">
                            <![CDATA[Bonjour, je suis NAO le robot, ça te dit qu'on fasse des devinettes ensemble ?]]>
                          </french>
                          <italian uiName="‎Italiano (Italian)" languageName="Italian">
                            <![CDATA[Ciao]]>
                          </italian>
                          <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                            <![CDATA[こんにちは]]>
                          </japanese>
                          <korean uiName="‎한국어 (Korean)" languageName="Korean">
                            <![CDATA[안녕하세요]]>
                          </korean>
                          <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                            <![CDATA[Hallo]]>
                          </dutch>
                          <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                            <![CDATA[]]>
                          </norwegian>
                          <polish uiName="‎Język polski (Polish)" languageName="Polish">
                            <![CDATA[Cześć]]>
                          </polish>
                          <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                            <![CDATA[Olá]]>
                          </brazilian>
                          <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                            <![CDATA[Olá]]>
                          </portuguese>
                          <russian uiName="‎Русский (Russian)" languageName="Russian">
                            <![CDATA[Привет]]>
                          </russian>
                          <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                            <![CDATA[Hallå]]>
                          </swedish>
                          <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                            <![CDATA[Merhaba]]>
                          </turkish>
                          <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                            <![CDATA[]]>
                          </chinese>
                          <language>french</language>
                        </pluginContent>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                        <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="DoubleLeftHandBump_LeanRight_01 (1)" id="2" localization="8" tooltip="ID : #01G 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- 1,2&#x0A;- Everything&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : LeanRight" x="109" y="259">
              <bitmap>media/images/box/movement/move.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="66">
                <ActuatorList model="">
                  <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                    <Key frame="15" value="-14.153" />
                    <Key frame="21" value="1.43506" />
                    <Key frame="30" value="-14.153" />
                    <Key frame="36" value="-2.98246" />
                    <Key frame="44" value="-14.153" />
                    <Key frame="56" value="-4.7" />
                    <Key frame="66" value="-14.153" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                    <Key frame="65" value="-0.793436" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                    <Key frame="65" value="-13.6208" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="-56.8635" smooth="1" symmetrical="1">
                      <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                      <Tangent side="right" interpType="bezier" abscissaParam="2.6296" ordinateParam="-3.0602" />
                    </Key>
                    <Key frame="18" value="-68.5" />
                    <Key frame="26" value="-53" />
                    <Key frame="34" value="-71.7" />
                    <Key frame="41" value="-53" />
                    <Key frame="48" value="-66.3" />
                    <Key frame="56" value="-56.8635" />
                    <Key frame="64" value="-56.8635" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="-52.3859" />
                    <Key frame="34" value="-79.3" />
                    <Key frame="41" value="-81.5" />
                    <Key frame="56" value="-52.3859" />
                    <Key frame="64" value="-52.3859" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                    <Key frame="10" value="0.1956" />
                    <Key frame="18" value="0.19" />
                    <Key frame="26" value="0.55" />
                    <Key frame="34" value="0.12" />
                    <Key frame="41" value="0.55" />
                    <Key frame="56" value="0.1956" />
                    <Key frame="64" value="0.1956" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                    <Key frame="65" value="9.75839" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                    <Key frame="65" value="15.8229" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                    <Key frame="65" value="-15.3786" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                    <Key frame="65" value="3.16169" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="71.4" />
                    <Key frame="34" value="71.4" />
                    <Key frame="56" value="71.4" />
                    <Key frame="64" value="79.188" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="-4.7" />
                    <Key frame="26" value="5.3" />
                    <Key frame="34" value="-4.7" />
                    <Key frame="41" value="5.3" />
                    <Key frame="56" value="-4.7" />
                    <Key frame="64" value="3.24959" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                    <Key frame="10" value="0.788627" />
                    <Key frame="26" value="-51.8" />
                    <Key frame="34" value="-51.8" />
                    <Key frame="41" value="-63.5" />
                    <Key frame="56" value="0.788627" />
                    <Key frame="64" value="0.788627" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                    <Key frame="65" value="-1.22808" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                    <Key frame="65" value="-7.02893" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                    <Key frame="10" value="59.5051" />
                    <Key frame="24" value="59.5051" />
                    <Key frame="46" value="59.5051" />
                    <Key frame="66" value="59.5051" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                    <Key frame="10" value="44.5587" />
                    <Key frame="24" value="44.5587" />
                    <Key frame="46" value="44.5587" />
                    <Key frame="66" value="44.5587" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                    <Key frame="10" value="0.2052" />
                    <Key frame="24" value="0.2052" />
                    <Key frame="46" value="0.2052" />
                    <Key frame="66" value="0.2052" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                    <Key frame="65" value="9.92936" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                    <Key frame="65" value="10.3736" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                    <Key frame="65" value="-15.3786" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                    <Key frame="65" value="3.51807" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                    <Key frame="10" value="71.4" />
                    <Key frame="24" value="76.1166" />
                    <Key frame="46" value="76.1166" />
                    <Key frame="66" value="76.1166" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                    <Key frame="10" value="4.7" />
                    <Key frame="24" value="-2.99072" />
                    <Key frame="46" value="-2.99072" />
                    <Key frame="66" value="-2.99072" />
                  </ActuatorCurve>
                  <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                    <Key frame="10" value="17.6638" />
                    <Key frame="24" value="17.6638" />
                    <Key frame="46" value="17.6638" />
                    <Key frame="66" value="17.6638" />
                  </ActuatorCurve>
                </ActuatorList>
              </Timeline>
              <Resource name="Standing" type="Lock" timeout="1" />
              <Resource name="All motors" type="Lock" timeout="1" />
            </Box>
            <Box name="Wait" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="303" y="376">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Wait (1)" id="4" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="370" y="676">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Color Edit (1)" id="25" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="489" y="725">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([170, 255, 127])]]>
                </content>
              </script>
              <pluginContent>
                <color>#aaff7f</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Say_anime_Led" id="26" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="199" y="559">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Mon premier est un animal de la ferme. ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Mon premier est un animal de la ferme.]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="OfferLeftHandThenRightHand_01" id="24" localization="8" tooltip="ID : #01G 0018&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Twice&#x0A;- And&#x0A;- 1,2&#x0A;- Both&#x0A;- Or&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="169" y="802">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="60">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="12" value="4.39469" />
                              <Key frame="19" value="-2.1" />
                              <Key frame="26" value="4.56679" />
                              <Key frame="32" value="4.56679" />
                              <Key frame="38" value="-2.1" />
                              <Key frame="44" value="2.8" />
                              <Key frame="47" value="2.8" />
                              <Key frame="60" value="-7.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="12" value="0" />
                              <Key frame="26" value="0.129999" />
                              <Key frame="32" value="0.129999" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="12" value="4.95196" />
                              <Key frame="19" value="-0.266077" />
                              <Key frame="26" value="5.71056" />
                              <Key frame="32" value="5.71056" />
                              <Key frame="47" value="4.95196" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="12" value="-7.14868" />
                              <Key frame="19" value="-9.48991" />
                              <Key frame="26" value="-11.5993" />
                              <Key frame="32" value="-11.5993" />
                              <Key frame="47" value="-7.14868" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="12" value="-60.2296" />
                              <Key frame="26" value="-59.9567" />
                              <Key frame="32" value="-59.9567" />
                              <Key frame="38" value="-80.8" />
                              <Key frame="44" value="-60.7" />
                              <Key frame="47" value="-60.7" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="12" value="-77.868" />
                              <Key frame="26" value="-78.4" />
                              <Key frame="32" value="-78.4" />
                              <Key frame="44" value="-110.2" />
                              <Key frame="47" value="-110.2" />
                              <Key frame="60" value="-85.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="12" value="0.43" />
                              <Key frame="26" value="0.43" />
                              <Key frame="32" value="0.43" />
                              <Key frame="44" value="1" />
                              <Key frame="47" value="1" />
                              <Key frame="60" value="0.64" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="12" value="6.91482" />
                              <Key frame="19" value="3.43018" />
                              <Key frame="26" value="6.24271" />
                              <Key frame="32" value="6.24271" />
                              <Key frame="47" value="6.96064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="12" value="5.47439" />
                              <Key frame="19" value="10.11" />
                              <Key frame="26" value="13.8893" />
                              <Key frame="32" value="13.8893" />
                              <Key frame="47" value="5.47439" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="12" value="-9.95213" />
                              <Key frame="19" value="-11.1598" />
                              <Key frame="26" value="-9.84147" />
                              <Key frame="32" value="-9.84147" />
                              <Key frame="47" value="-9.95213" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="12" value="-4.45169" />
                              <Key frame="19" value="4.91954" />
                              <Key frame="26" value="-4.57277" />
                              <Key frame="32" value="-4.57277" />
                              <Key frame="47" value="-4.41419" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="12" value="72.4573" />
                              <Key frame="26" value="72.2565" />
                              <Key frame="32" value="72.2565" />
                              <Key frame="60" value="92.4" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="12" value="4.78969" />
                              <Key frame="26" value="5.68033" />
                              <Key frame="32" value="5.68033" />
                              <Key frame="44" value="8" />
                              <Key frame="47" value="8" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="12" value="-79.2683" />
                              <Key frame="26" value="-79.3717" />
                              <Key frame="32" value="-79.3717" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="12" value="4.46666" />
                              <Key frame="19" value="-0.261268" />
                              <Key frame="26" value="5.18802" />
                              <Key frame="32" value="5.18802" />
                              <Key frame="47" value="4.69453" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="12" value="6.44514" />
                              <Key frame="19" value="3.86964" />
                              <Key frame="26" value="1.32078" />
                              <Key frame="32" value="1.32078" />
                              <Key frame="47" value="6.44514" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="12" value="60.5069" />
                              <Key frame="19" value="74.7" />
                              <Key frame="26" value="60.5217" />
                              <Key frame="32" value="60.5217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="12" value="79.2507" />
                              <Key frame="26" value="95.2" />
                              <Key frame="32" value="95.2" />
                              <Key frame="60" value="76.6" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="12" value="0.43" />
                              <Key frame="26" value="1" />
                              <Key frame="32" value="1" />
                              <Key frame="60" value="0.57" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="12" value="6.71377" />
                              <Key frame="19" value="2.89802" />
                              <Key frame="26" value="7.73207" />
                              <Key frame="32" value="7.73207" />
                              <Key frame="47" value="6.73439" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="12" value="-5.06217" />
                              <Key frame="19" value="-1.49175" />
                              <Key frame="26" value="2.11181" />
                              <Key frame="32" value="2.11181" />
                              <Key frame="47" value="-5.06217" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="12" value="-9.95213" />
                              <Key frame="19" value="-11.1598" />
                              <Key frame="26" value="-9.84147" />
                              <Key frame="32" value="-9.84147" />
                              <Key frame="47" value="-9.95213" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="12" value="-4.25016" />
                              <Key frame="19" value="6.5064" />
                              <Key frame="26" value="-4.30429" />
                              <Key frame="32" value="-4.30429" />
                              <Key frame="47" value="-4.25016" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="12" value="74.5735" />
                              <Key frame="26" value="74.3103" />
                              <Key frame="32" value="74.3103" />
                              <Key frame="60" value="84.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="12" value="-12.9848" />
                              <Key frame="26" value="-13.2292" />
                              <Key frame="32" value="-13.2292" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="12" value="69.3826" />
                              <Key frame="26" value="98" />
                              <Key frame="32" value="98" />
                              <Key frame="60" value="71.8" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="24" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Say_anime_Led (1)" id="8" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="548" y="818">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Mon second est fabriqué par les oiseaux ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Mon second est fabriqué par les oiseaux]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="GoToStance_Enumeration_LeanRight" id="30" localization="8" tooltip="ID : #01G 9993&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Transition&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : LeanRight" x="231" y="823">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="26">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="11" value="0" />
                              <Key frame="24" value="-8.61579" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="24" value="-2.90283" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="11" value="-5.2" />
                              <Key frame="24" value="-0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="24" value="-12.9225" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="12" value="-82.7085" />
                              <Key frame="26" value="-82.7085" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="12" value="-75.0571" />
                              <Key frame="26" value="-74.8" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="12" value="0.09" />
                              <Key frame="26" value="0.87" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="11" value="-12.4782" />
                              <Key frame="24" value="5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="24" value="13.7966" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="11" value="-11.072" />
                              <Key frame="24" value="-10.4567" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="11" value="23.992" />
                              <Key frame="24" value="2.63916" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="12" value="46.6729" />
                              <Key frame="26" value="88.6" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="12" value="-5.97423" />
                              <Key frame="26" value="-5.97423" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="12" value="-85.3405" />
                              <Key frame="26" value="-85.3405" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="11" value="-5.2" />
                              <Key frame="24" value="-3.78175" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="24" value="-2.1997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="86.7467" />
                              <Key frame="23" value="86.7467" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="69.7006" />
                              <Key frame="23" value="103.9" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="10" value="0.09" />
                              <Key frame="23" value="0.87" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="11" value="-15.3835" />
                              <Key frame="24" value="6.77007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="24" value="5.00743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="11" value="-11.072" />
                              <Key frame="24" value="-10.4567" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="11" value="24.8758" />
                              <Key frame="24" value="4.56796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="44.9103" />
                              <Key frame="23" value="88.6" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="-1.57965" />
                              <Key frame="23" value="-1.57965" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="10" value="88.7731" />
                              <Key frame="23" value="88.7731" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="30" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Say_anime_Led (2)" id="10" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="560" y="499">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Mon troisième gigote sous la terre ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Mon troisième gigote sous la terre]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="DoubleLeftHandBump_LeanRight_01" id="50" localization="8" tooltip="ID : #01G 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- 1,2&#x0A;- Everything&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : LeanRight" x="378" y="606">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="66">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="15" value="-14.153" />
                              <Key frame="21" value="1.43506" />
                              <Key frame="30" value="-14.153" />
                              <Key frame="36" value="-2.98246" />
                              <Key frame="44" value="-14.153" />
                              <Key frame="56" value="-4.7" />
                              <Key frame="66" value="-14.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="65" value="-0.793436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="65" value="-13.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="-56.8635" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                <Tangent side="right" interpType="bezier" abscissaParam="2.6296" ordinateParam="-3.0602" />
                              </Key>
                              <Key frame="18" value="-68.5" />
                              <Key frame="26" value="-53" />
                              <Key frame="34" value="-71.7" />
                              <Key frame="41" value="-53" />
                              <Key frame="48" value="-66.3" />
                              <Key frame="56" value="-56.8635" />
                              <Key frame="64" value="-56.8635" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="-52.3859" />
                              <Key frame="34" value="-79.3" />
                              <Key frame="41" value="-81.5" />
                              <Key frame="56" value="-52.3859" />
                              <Key frame="64" value="-52.3859" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="10" value="0.1956" />
                              <Key frame="18" value="0.19" />
                              <Key frame="26" value="0.55" />
                              <Key frame="34" value="0.12" />
                              <Key frame="41" value="0.55" />
                              <Key frame="56" value="0.1956" />
                              <Key frame="64" value="0.1956" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="65" value="9.75839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="65" value="15.8229" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="65" value="-15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="65" value="3.16169" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="71.4" />
                              <Key frame="34" value="71.4" />
                              <Key frame="56" value="71.4" />
                              <Key frame="64" value="79.188" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="-4.7" />
                              <Key frame="26" value="5.3" />
                              <Key frame="34" value="-4.7" />
                              <Key frame="41" value="5.3" />
                              <Key frame="56" value="-4.7" />
                              <Key frame="64" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="10" value="0.788627" />
                              <Key frame="26" value="-51.8" />
                              <Key frame="34" value="-51.8" />
                              <Key frame="41" value="-63.5" />
                              <Key frame="56" value="0.788627" />
                              <Key frame="64" value="0.788627" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="65" value="-1.22808" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="65" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="59.5051" />
                              <Key frame="24" value="59.5051" />
                              <Key frame="46" value="59.5051" />
                              <Key frame="66" value="59.5051" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="44.5587" />
                              <Key frame="24" value="44.5587" />
                              <Key frame="46" value="44.5587" />
                              <Key frame="66" value="44.5587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="10" value="0.2052" />
                              <Key frame="24" value="0.2052" />
                              <Key frame="46" value="0.2052" />
                              <Key frame="66" value="0.2052" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="65" value="9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="65" value="10.3736" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="65" value="-15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="65" value="3.51807" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="71.4" />
                              <Key frame="24" value="76.1166" />
                              <Key frame="46" value="76.1166" />
                              <Key frame="66" value="76.1166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="4.7" />
                              <Key frame="24" value="-2.99072" />
                              <Key frame="46" value="-2.99072" />
                              <Key frame="66" value="-2.99072" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="10" value="17.6638" />
                              <Key frame="24" value="17.6638" />
                              <Key frame="46" value="17.6638" />
                              <Key frame="66" value="17.6638" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="50" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Wait (2)" id="22" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="677" y="818">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Wait (3)" id="5" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="694" y="296">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Say_anime_Led (3)" id="12" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="907" y="102">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Mon quatrième abrite les plantes vertes ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Mon quatrième abrite les plantes vertes]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="DoubleLeftHandBump_LeanRight_01" id="50" localization="8" tooltip="ID : #01G 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- 1,2&#x0A;- Everything&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : LeanRight" x="378" y="606">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="66">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="15" value="-14.153" />
                              <Key frame="21" value="1.43506" />
                              <Key frame="30" value="-14.153" />
                              <Key frame="36" value="-2.98246" />
                              <Key frame="44" value="-14.153" />
                              <Key frame="56" value="-4.7" />
                              <Key frame="66" value="-14.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="65" value="-0.793436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="65" value="-13.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="-56.8635" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                <Tangent side="right" interpType="bezier" abscissaParam="2.6296" ordinateParam="-3.0602" />
                              </Key>
                              <Key frame="18" value="-68.5" />
                              <Key frame="26" value="-53" />
                              <Key frame="34" value="-71.7" />
                              <Key frame="41" value="-53" />
                              <Key frame="48" value="-66.3" />
                              <Key frame="56" value="-56.8635" />
                              <Key frame="64" value="-56.8635" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="-52.3859" />
                              <Key frame="34" value="-79.3" />
                              <Key frame="41" value="-81.5" />
                              <Key frame="56" value="-52.3859" />
                              <Key frame="64" value="-52.3859" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="10" value="0.1956" />
                              <Key frame="18" value="0.19" />
                              <Key frame="26" value="0.55" />
                              <Key frame="34" value="0.12" />
                              <Key frame="41" value="0.55" />
                              <Key frame="56" value="0.1956" />
                              <Key frame="64" value="0.1956" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="65" value="9.75839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="65" value="15.8229" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="65" value="-15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="65" value="3.16169" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="71.4" />
                              <Key frame="34" value="71.4" />
                              <Key frame="56" value="71.4" />
                              <Key frame="64" value="79.188" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="-4.7" />
                              <Key frame="26" value="5.3" />
                              <Key frame="34" value="-4.7" />
                              <Key frame="41" value="5.3" />
                              <Key frame="56" value="-4.7" />
                              <Key frame="64" value="3.24959" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="10" value="0.788627" />
                              <Key frame="26" value="-51.8" />
                              <Key frame="34" value="-51.8" />
                              <Key frame="41" value="-63.5" />
                              <Key frame="56" value="0.788627" />
                              <Key frame="64" value="0.788627" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="65" value="-1.22808" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="65" value="-7.02893" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="10" value="59.5051" />
                              <Key frame="24" value="59.5051" />
                              <Key frame="46" value="59.5051" />
                              <Key frame="66" value="59.5051" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="10" value="44.5587" />
                              <Key frame="24" value="44.5587" />
                              <Key frame="46" value="44.5587" />
                              <Key frame="66" value="44.5587" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="10" value="0.2052" />
                              <Key frame="24" value="0.2052" />
                              <Key frame="46" value="0.2052" />
                              <Key frame="66" value="0.2052" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="65" value="9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="65" value="10.3736" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="65" value="-15.3786" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="65" value="3.51807" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="10" value="71.4" />
                              <Key frame="24" value="76.1166" />
                              <Key frame="46" value="76.1166" />
                              <Key frame="66" value="76.1166" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="10" value="4.7" />
                              <Key frame="24" value="-2.99072" />
                              <Key frame="46" value="-2.99072" />
                              <Key frame="66" value="-2.99072" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="10" value="17.6638" />
                              <Key frame="24" value="17.6638" />
                              <Key frame="46" value="17.6638" />
                              <Key frame="66" value="17.6638" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="50" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Color Edit (2)" id="13" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="772" y="182">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([170, 0, 0])]]>
                </content>
              </script>
              <pluginContent>
                <color>#aa0000</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Wait (4)" id="6" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="881" y="367">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Say_anime_Led (4)" id="14" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="887" y="593">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Mon tout se passe le même jour que ta naissance ! ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Mon tout se passe le même jour que ta naissance !]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="TakePicture" id="2" localization="8" tooltip="ID : #04C 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags :&#x0A;- Picture" x="370" y="552">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="90">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe14" index="14">
                              <Diagram>
                                <Box name="Blink" id="2" localization="8" tooltip="tags:&#x0A;LED" x="108" y="35">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="EyesOnOff" id="6" localization="8" tooltip="tags:&#x0A;LED" x="248" y="36">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = self.getParameter('Timing')

        self.log(self.getParameter('Eyes'))

        if(self.getParameter('Eyes') == 'On'):
            nColor = 0xFFFFFF
        else:
            nColor = 0x000000

        self.leds.fadeRGB( "FaceLeds", nColor, rDuration );

        self.onStopped()

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Parameter name="Eyes" inherits_from_parent="0" content_type="3" value="Off" default_value="On" custom_choice="0" tooltip="" id="5">
                                    <Choice value="On" />
                                    <Choice value="Off" />
                                  </Parameter>
                                  <Parameter name="Timing" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.05" max="10.05" tooltip="" id="6" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="1" />
                                <Link inputowner="6" indexofinput="2" outputowner="2" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                            <BehaviorKeyframe name="keyframe43" index="43">
                              <Diagram>
                                <Box name="Flash" id="4" localization="8" tooltip="tags:&#x0A;LED" x="84" y="32">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.1;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        time.sleep( 0.05 );

        rDuration = 1;
        self.leds.fadeRGB( "FaceLeds", 0x000000, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="Blink" id="6" localization="8" tooltip="tags:&#x0A;LED" x="247" y="28">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self):
        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLed0", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed2", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed5", 0x000000, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed6", 0xffffff, rDuration, _async=True );
        self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration );

        time.sleep( 0.1 );

        rDuration = 0.05;
        self.leds.fadeRGB( "FaceLeds", 0xffffff, rDuration );

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Link inputowner="6" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <BehaviorLayer name="behavior_layer2">
                            <BehaviorKeyframe name="keyframe42" index="42">
                              <Diagram>
                                <Box name="Play Sound" id="3" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be&#x0A;wav, mp3, or ogg.&#x0A;&#x0A;Note: There can be some delay to play mp3 files. We advise you to use wav if&#x0A;you want a fast play of the file." x="91" y="19">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/camera1.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                  <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                  <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                  <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on NAO&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                            <Resource name="Audio player" type="Stop on demand" timeout="0" />
                                          </Box>
                                          <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                            <bitmap>media/images/box/folder.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="17" value="6.8" />
                              <Key frame="32" value="-3.2544" />
                              <Key frame="37" value="-7.8" />
                              <Key frame="49" value="-5.62747" />
                              <Key frame="58" value="-3.89167" />
                              <Key frame="74" value="5.1" />
                              <Key frame="90" value="-10.0221" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="32" value="-2.46337" />
                              <Key frame="37" value="-2.81494" />
                              <Key frame="49" value="-2.99072" />
                              <Key frame="58" value="-2.70816" />
                              <Key frame="90" value="-1.145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                              <Key frame="16" value="-15.5456" />
                              <Key frame="31" value="-2.06906" />
                              <Key frame="58" value="-2.06906" />
                              <Key frame="73" value="-19.2661" />
                              <Key frame="88" value="-2.1955" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                              <Key frame="31" value="0" />
                              <Key frame="58" value="0" />
                              <Key frame="88" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                              <Key frame="16" value="7.94935" />
                              <Key frame="31" value="0.138683" />
                              <Key frame="58" value="0.138683" />
                              <Key frame="73" value="8.96106" />
                              <Key frame="88" value="-0.259007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="15" value="-69" />
                              <Key frame="31" value="-88.5" />
                              <Key frame="43" value="-88.5" />
                              <Key frame="58" value="-87.8062" />
                              <Key frame="73" value="-82.2" />
                              <Key frame="88" value="-25.4862" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="15" value="-41.3" />
                              <Key frame="31" value="-46.5607" />
                              <Key frame="43" value="-46.5607" />
                              <Key frame="46" value="-40.9561" />
                              <Key frame="58" value="-47.0001" />
                              <Key frame="88" value="-66.888" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="15" value="0.57" />
                              <Key frame="31" value="1" />
                              <Key frame="43" value="1" />
                              <Key frame="46" value="0.12" />
                              <Key frame="49" value="1" />
                              <Key frame="58" value="0.9004" />
                              <Key frame="88" value="0.3024" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="31" value="-29.3448" />
                              <Key frame="43" value="-29.3448" />
                              <Key frame="58" value="-25.126" />
                              <Key frame="88" value="86.3073" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="15" value="32.8" />
                              <Key frame="31" value="27.442" />
                              <Key frame="43" value="27.442" />
                              <Key frame="58" value="26.2115" />
                              <Key frame="88" value="6.67737" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="15" value="22.5" />
                              <Key frame="31" value="13.6359" />
                              <Key frame="43" value="13.6359" />
                              <Key frame="58" value="14.5148" />
                              <Key frame="88" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="15" value="69" />
                              <Key frame="31" value="88.5" />
                              <Key frame="43" value="88.5" />
                              <Key frame="58" value="87.8062" />
                              <Key frame="73" value="82.2" />
                              <Key frame="88" value="23.9968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="15" value="41.3" />
                              <Key frame="31" value="46.5607" />
                              <Key frame="43" value="46.5607" />
                              <Key frame="46" value="40.9561" />
                              <Key frame="58" value="47.0001" />
                              <Key frame="88" value="66.0922" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="15" value="0.57" />
                              <Key frame="31" value="1" />
                              <Key frame="43" value="1" />
                              <Key frame="46" value="0.12" />
                              <Key frame="49" value="1" />
                              <Key frame="58" value="0.9004" />
                              <Key frame="88" value="0.3052" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="31" value="-29.3448" />
                              <Key frame="43" value="-29.3448" />
                              <Key frame="58" value="-25.126" />
                              <Key frame="88" value="86.2242" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="15" value="-32.8" />
                              <Key frame="31" value="-27.442" />
                              <Key frame="43" value="-27.442" />
                              <Key frame="58" value="-26.2115" />
                              <Key frame="88" value="-7.29742" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="15" value="-22.5" />
                              <Key frame="31" value="-13.6359" />
                              <Key frame="43" value="-13.6359" />
                              <Key frame="58" value="-14.5148" />
                              <Key frame="88" value="10.193" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                        <Resource name="Left eye leds" type="Lock" timeout="1" />
                        <Resource name="Right eye leds" type="Lock" timeout="1" />
                        <Resource name="Speakers" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Color Edit (3)" id="7" localization="8" tooltip="Send a color encoded as [R,G,B] values." plugin="coloredit_plugin" x="1044" y="427">
              <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 85, 255])]]>
                </content>
              </script>
              <pluginContent>
                <color>#0055ff</color>
              </pluginContent>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the color on the output." id="2" />
              <Output name="onStopped" type="2" type_size="3" nature="2" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
            </Box>
            <Box name="Say_anime_Led (5)" id="15" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="1192" y="770">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " Alors, as-tu trouvé la bonne réponse ? ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[Alors, as-tu trouvé la bonne réponse ?]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="ShowNearDistanceRight_01" id="2" localization="8" tooltip="ID : #01A 0019&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Here&#x0A;- Now&#x0A;- There&#x0A;- Yesterday&#x0A;- Front&#x0A;- Near&#x0A;- Down&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="355" y="673">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="40">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="9" value="-14.4764" />
                              <Key frame="16" value="-0.196134" />
                              <Key frame="24" value="-12.684" />
                              <Key frame="40" value="-17.1478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="9" value="0" />
                              <Key frame="24" value="0" />
                              <Key frame="40" value="0" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="22" value="-20.1248" />
                              <Key frame="40" value="-23.0252" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="22" value="-56.1652" />
                              <Key frame="40" value="-67.5911" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="22" value="0.52" />
                              <Key frame="40" value="0.304" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="22" value="78.2212" />
                              <Key frame="40" value="83.6705" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="22" value="14.7437" />
                              <Key frame="40" value="18.6989" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="22" value="-30.3" />
                              <Key frame="40" value="5.00743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="6" value="55.1953" />
                              <Key frame="9" value="59.3092" />
                              <Key frame="16" value="50.0813" />
                              <Key frame="24" value="27.6758" />
                              <Key frame="32" value="34.1798" />
                              <Key frame="40" value="26.6211" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="6" value="52.3" />
                              <Key frame="9" value="52.5" />
                              <Key frame="16" value="63.8848" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-2.70549" ordinateParam="-6.56966" />
                                <Tangent side="right" interpType="bezier" abscissaParam="3.09199" ordinateParam="7.50818" />
                              </Key>
                              <Key frame="24" value="94.0282" />
                              <Key frame="32" value="44.4708" />
                              <Key frame="40" value="69.4321" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="6" value="0.32" />
                              <Key frame="9" value="0.38" />
                              <Key frame="24" value="0.77" />
                              <Key frame="32" value="0.29" />
                              <Key frame="40" value="0.3012" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="6" value="83.1445" />
                              <Key frame="24" value="70.0521" />
                              <Key frame="40" value="83.4996" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="6" value="-17.8" />
                              <Key frame="24" value="-28.6916" />
                              <Key frame="40" value="-14.6816" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="6" value="29.4" />
                              <Key frame="9" value="43.9" />
                              <Key frame="24" value="92.987" />
                              <Key frame="40" value="6.50159" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0">
                              <Key frame="13" value="-6.01038" />
                              <Key frame="19" value="-7.53436" />
                              <Key frame="37" value="-3.62465" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0">
                              <Key frame="13" value="0.194351" />
                              <Key frame="19" value="0.194351" />
                              <Key frame="37" value="0.194351" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0">
                              <Key frame="13" value="1.20444" />
                              <Key frame="19" value="2.16624" />
                              <Key frame="37" value="-1.62843" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="Wait (5)" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="999" y="799">
              <bitmap>media/images/box/wait.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
              <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
              <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
              <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
            </Box>
            <Box name="Say_anime_Led (6)" id="17" localization="8" tooltip="Parle en étant animé et en éclairant ses yeux" x="1489" y="143">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="input" type="1" type_size="1" nature="2" inner="0" tooltip="" id="2" />
              <Output name="Say1_onStopped" type="1" type_size="1" nature="2" inner="0" tooltip="This output has been automatically generated&#x0A;by converting several boxes into a single box." id="3" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="Say (1)" id="10" localization="8" tooltip="Say some text. Note that you must open the box to enter the text." x="557" y="473">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed.&#x0A;&#x0A;!Warning! This feature is not available yet in Japanese, Chinese and Korean." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Say Text" id="2" localization="8" tooltip="Say the text received on its input." x="422" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.tts = ALProxy('ALTextToSpeech')
        self.ttsStop = ALProxy('ALTextToSpeech', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.post.say(str(sentence))
            self.ids.append(id)
            self.tts.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                </Box>
                                <Box name="Localized Text" id="5" localization="8" tooltip="Send on the output the text associated with the robot&apos;s current voice language.&#x0A;You can display and edit the text associated with any language by&#x0A;selecting the language in the combobox.&#x0A;&#x0A;!!Warning!! The text sent on the output is NOT the displayed one but the one&#x0A;associated with the robot&apos;s current voice language." plugin="localizationbox_plugin" x="114" y="68">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
			GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
			GeneratedClass.__init__( self )

		self.sentences = {
			"Arabic" : "  ",
			"Czech" : " Ahoj ",
			"Danish" : " Hej ",
			"German" : " Hallo ",
			"Greek" : "  ",
			"English" : " Hello ",
			"Spanish" : " Hola ",
			"Finnish" : " Hei ",
			"French" : " C\'était ton anniversaire !\nBravo ! Je me suis beaucoup amusé avec toi ! ",
			"Italian" : " Ciao ",
			"Japanese" : " こんにちは ",
			"Korean" : " 안녕하세요 ",
			"Dutch" : " Hallo ",
			"Norwegian" : "  ",
			"Polish" : " Cześć ",
			"Brazilian" : " Olá ",
			"Portuguese" : " Olá ",
			"Russian" : " Привет ",
			"Swedish" : " Hallå ",
			"Turkish" : " Merhaba ",
			"Chinese" : "  ",
		}

	def onLoad(self):
		self.tts = self.session().service("ALTextToSpeech")

	def onInput_onStart(self):
		sDefaultLang = self.tts.getLanguage()
		self.onStopped(self.sentences[sDefaultLang])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <arabic uiName="‎اللغة العربية (Arabic)" languageName="Arabic">
                                      <![CDATA[]]>
                                    </arabic>
                                    <czech uiName="‎Český Jazyk (Czech)" languageName="Czech">
                                      <![CDATA[Ahoj]]>
                                    </czech>
                                    <danish uiName="‎Dansk (Danish)" languageName="Danish">
                                      <![CDATA[Hej]]>
                                    </danish>
                                    <german uiName="‎Deutsch (German)" languageName="German">
                                      <![CDATA[Hallo]]>
                                    </german>
                                    <greek uiName="‎Ελληνικά (Greek)" languageName="Greek">
                                      <![CDATA[]]>
                                    </greek>
                                    <english uiName="‎American English (American English)" languageName="English">
                                      <![CDATA[Hello]]>
                                    </english>
                                    <spanish uiName="‎Español (Spanish)" languageName="Spanish">
                                      <![CDATA[Hola]]>
                                    </spanish>
                                    <finnish uiName="‎Suomi (Finnish)" languageName="Finnish">
                                      <![CDATA[Hei]]>
                                    </finnish>
                                    <french uiName="‎Français (French)" languageName="French">
                                      <![CDATA[C'était ton anniversaire !
Bravo ! Je me suis beaucoup amusé avec toi !]]>
                                    </french>
                                    <italian uiName="‎Italiano (Italian)" languageName="Italian">
                                      <![CDATA[Ciao]]>
                                    </italian>
                                    <japanese uiName="‎日本語 (Japanese)" languageName="Japanese">
                                      <![CDATA[こんにちは]]>
                                    </japanese>
                                    <korean uiName="‎한국어 (Korean)" languageName="Korean">
                                      <![CDATA[안녕하세요]]>
                                    </korean>
                                    <dutch uiName="‎Nederlands (Dutch)" languageName="Dutch">
                                      <![CDATA[Hallo]]>
                                    </dutch>
                                    <norwegian uiName="‎Norsk (Norwegian)" languageName="Norwegian">
                                      <![CDATA[]]>
                                    </norwegian>
                                    <polish uiName="‎Język polski (Polish)" languageName="Polish">
                                      <![CDATA[Cześć]]>
                                    </polish>
                                    <brazilian uiName="‎Português do Brasil (Brazilian)" languageName="Brazilian">
                                      <![CDATA[Olá]]>
                                    </brazilian>
                                    <portuguese uiName="‎Português (Portuguese)" languageName="Portuguese">
                                      <![CDATA[Olá]]>
                                    </portuguese>
                                    <russian uiName="‎Русский (Russian)" languageName="Russian">
                                      <![CDATA[Привет]]>
                                    </russian>
                                    <swedish uiName="‎Svenska (Swedish)" languageName="Swedish">
                                      <![CDATA[Hallå]]>
                                    </swedish>
                                    <turkish uiName="‎Türkçe (Turkish)" languageName="Turkish">
                                      <![CDATA[Merhaba]]>
                                    </turkish>
                                    <chinese uiName="‎普通话 (Mandarin Chinese)" languageName="Chinese">
                                      <![CDATA[]]>
                                    </chinese>
                                    <language>french</language>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Data is sent on the output when this input is stimulated." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="1" inner="0" tooltip="Data sent when asked." id="3" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="5" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Eye LEDs (1)" id="8" localization="8" tooltip="Set the LED color of the eyes. Note that you must open the box to enter the color." x="135" y="700">
                        <bitmap>media/images/box/interaction/LED.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                        <Parameter name="Side" inherits_from_parent="0" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                          <Choice value="Both" />
                          <Choice value="Left" />
                          <Choice value="Right" />
                        </Parameter>
                        <Parameter name="Duration (s)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Eyes LEDs" id="15" localization="8" tooltip="Set the color of LEDs of robot&apos;s eyes." x="281" y="41">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.fadeOps = []
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_color(self, p):
        if( self.getParameter("Side") == "Left" ):
            sGroup = "LeftFaceLeds"
        elif( self.getParameter("Side") == "Right" ):
            sGroup = "RightFaceLeds"
        else:
            sGroup = "FaceLeds"
        fadeOp = self.leds.fadeRGB(sGroup, 256*256*p[0] + 256*p[1] + p[2], self.getParameter("Duration (s)"), _async=True)
        self.fadeOps.append(fadeOp)
        fadeOp.wait()
        self.fadeOps.remove(fadeOp)
        if( self.fadeOps == [] ):
            self.onDone() # activate output of the box]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="color" type="2" type_size="3" nature="2" inner="0" tooltip="Color of robot&apos;s eyes." id="2" />
                                  <Output name="onDone" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="3" />
                                  <Parameter name="Side" inherits_from_parent="1" content_type="3" value="Both" default_value="Both" custom_choice="0" tooltip="Choose the eye where the LED light is set." id="4">
                                    <Choice value="Both" />
                                    <Choice value="Left" />
                                    <Choice value="Right" />
                                  </Parameter>
                                  <Parameter name="Duration (s)" inherits_from_parent="1" content_type="2" value="0.1" default_value="0.1" min="0" max="5" tooltip="Transition&apos;s duration in seconds." id="5" />
                                </Box>
                                <Box name="Color Edit" id="16" localization="8" tooltip="Transmit a table of number [R,G,B] correponsding to the selected color." plugin="coloredit_plugin" x="105" y="47">
                                  <bitmap>media/images/box/interaction/vocabulary.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onInput_onStart(self):
		self.onStopped([0, 81, 255])]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <color>#0051ff</color>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="To send the color on the output." id="2" />
                                  <Output name="onStopped" type="2" type_size="3" nature="1" inner="0" tooltip="[R,G,B] with R, G and B between 0 and 255." id="3" />
                                </Box>
                                <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="3" />
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="3" outputowner="15" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Happy" id="2" localization="8" tooltip="ID : #02A 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Happy" x="383" y="655">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="53">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="FaceLeds" index="1">
                              <Diagram scale="100">
                                <Box name="laugh" id="1" localization="8" tooltip="laugh" x="123" y="42">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.bMustStop = False;
        self.bIsRunning = False;

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        self.onInput_onStop();

    def onInput_onStart(self):
        if( self.bIsRunning ):

            return;

        rDuration = 0.2;
        self.bMustStop = False;
        self.bIsRunning = True;

        while( not self.bMustStop ):
            self.leds.fadeRGB( "FaceLed0", 0x787e9d, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed1", 0x000000, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed2", 0x2ec1e9, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed4", 0x000000, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed5", 0x1e9980, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed6", 0x000000, rDuration, _async=True );
            self.leds.fadeRGB( "FaceLed7", 0x000000, rDuration, _async=True );

            #time.sleep( 0.1 );

            self.leds.fadeRGB( "FaceLed0", 0x0400a1, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed1", 0x14a176, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed2", 0x000022, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed3", 0x000000, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed4", 0x00000e, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed5", 0x56ffff, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed6", 0x000020, rDuration*2, _async=True );
            self.leds.fadeRGB( "FaceLed7", 0x000038, rDuration*2 );


            if( self.bMustStop ):
                break;

        self.bIsRunning = False;
        self.onStopped();

    def onInput_onStop(self):
        self.bMustStop = True;]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                              <Key frame="19" value="-13" />
                              <Key frame="34" value="7" />
                              <Key frame="53" value="-0.881321" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                              <Key frame="19" value="7.29261" />
                              <Key frame="34" value="-8" />
                              <Key frame="53" value="-10.3736" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                              <Key frame="9" value="84.901" />
                              <Key frame="17" value="80.5064" />
                              <Key frame="25" value="84.8131" />
                              <Key frame="32" value="81.9127" />
                              <Key frame="51" value="85.1647" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                              <Key frame="9" value="35.8574" />
                              <Key frame="17" value="8.17153" />
                              <Key frame="25" value="34.0117" />
                              <Key frame="32" value="9.31412" />
                              <Key frame="51" value="4.91953" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                              <Key frame="9" value="-50.628" />
                              <Key frame="17" value="-59.5051" />
                              <Key frame="25" value="-50.8917" />
                              <Key frame="32" value="-58.7141" />
                              <Key frame="51" value="-64.8665" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                              <Key frame="9" value="-39.1973" />
                              <Key frame="17" value="-80.5943" />
                              <Key frame="25" value="-39.3731" />
                              <Key frame="32" value="-79.3638" />
                              <Key frame="51" value="-21.8826" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                              <Key frame="17" value="-6.4185" />
                              <Key frame="32" value="-6.4185" />
                              <Key frame="51" value="-7.38531" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                              <Key frame="17" value="0.110572" />
                              <Key frame="32" value="0.110935" />
                              <Key frame="51" value="0.112026" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                              <Key frame="7" value="79.3686" />
                              <Key frame="15" value="85.3453" />
                              <Key frame="23" value="81.2144" />
                              <Key frame="30" value="85.4332" />
                              <Key frame="49" value="88.1578" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                              <Key frame="7" value="-7.20953" />
                              <Key frame="15" value="-34.1923" />
                              <Key frame="23" value="-8.26423" />
                              <Key frame="30" value="-32.6102" />
                              <Key frame="49" value="-3.07861" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                              <Key frame="7" value="60.3792" />
                              <Key frame="15" value="50.799" />
                              <Key frame="23" value="59.6761" />
                              <Key frame="30" value="51.0627" />
                              <Key frame="49" value="85.6041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                              <Key frame="7" value="81.7417" />
                              <Key frame="15" value="39.2021" />
                              <Key frame="23" value="80.4233" />
                              <Key frame="30" value="39.5537" />
                              <Key frame="49" value="26.0184" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                              <Key frame="15" value="0.173379" />
                              <Key frame="30" value="0.173379" />
                              <Key frame="49" value="-0.266079" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                              <Key frame="15" value="0.221844" />
                              <Key frame="30" value="0.221844" />
                              <Key frame="49" value="0.221116" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                              <Key frame="16" value="-20.2127" />
                              <Key frame="31" value="-20.2127" />
                              <Key frame="50" value="-18.367" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                              <Key frame="16" value="14.0651" />
                              <Key frame="31" value="-0.705538" />
                              <Key frame="50" value="6.15482" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                              <Key frame="16" value="1.58446" />
                              <Key frame="31" value="-6.59428" />
                              <Key frame="50" value="11.8678" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                              <Key frame="16" value="2.98591" />
                              <Key frame="31" value="27.3367" />
                              <Key frame="50" value="-5.29104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                              <Key frame="16" value="7.99574" />
                              <Key frame="31" value="-8.4352" />
                              <Key frame="50" value="6.76526" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                              <Key frame="16" value="-13.445" />
                              <Key frame="31" value="1.0523" />
                              <Key frame="50" value="-5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                              <Key frame="16" value="0.79343" />
                              <Key frame="31" value="-13.9772" />
                              <Key frame="50" value="-3.60116" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                              <Key frame="16" value="-6.68218" />
                              <Key frame="31" value="1.76024" />
                              <Key frame="50" value="12.2145" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                              <Key frame="16" value="27.3367" />
                              <Key frame="31" value="2.98591" />
                              <Key frame="50" value="-4.48007" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                              <Key frame="16" value="-8.61098" />
                              <Key frame="31" value="8.08363" />
                              <Key frame="50" value="6.33061" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                              <Key frame="16" value="-1.0523" />
                              <Key frame="31" value="13.445" />
                              <Key frame="50" value="3.16651" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                        <Resource name="Left eye leds" type="Lock" timeout="1" />
                        <Resource name="Right eye leds" type="Lock" timeout="1" />
                      </Box>
                      <Link inputowner="0" indexofinput="3" outputowner="10" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="8" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Link inputowner="11" indexofinput="2" outputowner="9" indexofoutput="3" />
            <Link inputowner="9" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="3" />
            <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="3" />
            <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="26" indexofoutput="3" />
            <Link inputowner="25" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="26" indexofinput="2" outputowner="3" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="25" indexofoutput="3" />
            <Link inputowner="22" indexofinput="2" outputowner="8" indexofoutput="3" />
            <Link inputowner="10" indexofinput="2" outputowner="22" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="10" indexofoutput="3" />
            <Link inputowner="13" indexofinput="2" outputowner="5" indexofoutput="4" />
            <Link inputowner="12" indexofinput="2" outputowner="13" indexofoutput="3" />
            <Link inputowner="6" indexofinput="2" outputowner="12" indexofoutput="3" />
            <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="4" />
            <Link inputowner="14" indexofinput="2" outputowner="7" indexofoutput="3" />
            <Link inputowner="16" indexofinput="2" outputowner="14" indexofoutput="3" />
            <Link inputowner="15" indexofinput="2" outputowner="16" indexofoutput="4" />
            <Link inputowner="23" indexofinput="2" outputowner="15" indexofoutput="3" />
            <Link inputowner="17" indexofinput="2" outputowner="23" indexofoutput="4" />
            <Link inputowner="0" indexofinput="4" outputowner="17" indexofoutput="3" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
